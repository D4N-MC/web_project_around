!function(){"use strict";var e={d:function(t,n){for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},p:""};function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function n(e,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}e.d({},{l:function(){return le},E:function(){return de}});var r=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,r;return t=e,(r=[{key:"render",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.append(e)}},{key:"addNewItem",value:function(e){this._container.prepend(e)}},{key:"clear",value:function(){for(;this._container.firstChild;)this._container.removeChild(this._container.firstChild)}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=c(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},i.apply(this,arguments)}function u(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function l(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=c(e);if(t){var i=c(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return function(e,t){if(t&&("object"===o(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,n)}}function c(e){return c=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},c(e)}function s(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==o(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===o(i)?i:String(i)),r)}var i}function f(e,t,n){return t&&d(e.prototype,t),n&&d(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}var p=function(){function e(t){s(this,e),this._popup=document.querySelector(t),this._content=this._popup.querySelector(".contentPopup"),this.setEventListeners()}return f(e,[{key:"open",value:function(){this._popup.classList.add("popup_opened")}},{key:"close",value:function(){this._popup.classList.remove("popup_opened")}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){t.target.classList.contains("closeButton")&&e.close()})),document.addEventListener("keydown",(function(t){"Escape"===t.key&&e.close()})),this._popup.addEventListener("mousedown",(function(t){e._content.contains(t.target)||e.close()}))}}]),e}(),m=function(e){u(n,e);var t=l(n);function n(e){var r;return s(this,n),(r=t.call(this,e))._popupImage=r._popup.querySelector(".image-popup__image"),r._popupCaption=r._popup.querySelector(".image-popup__name"),r}return f(n,[{key:"open",value:function(e,t){i(c(n.prototype),"open",this).call(this),this._popupImage.src=e,this._popupImage.alt=t,this._popupCaption.textContent=t}}]),n}(p),y=function(e){u(n,e);var t=l(n);function n(e,r){var o;return s(this,n),(o=t.call(this,e))._submitCallback=r,o._inputList=o._popup.querySelectorAll(".input"),o}return f(n,[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.id]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;i(c(n.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("submit",(function(t){t.preventDefault(),e._submitCallback(e._getInputValues()),e.close()}))}},{key:"close",value:function(){i(c(n.prototype),"close",this).call(this)}}]),n}(p);function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==h(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==h(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===h(o)?o:String(o)),r)}var o}var v=new(function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.headers=t.headers}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers}).then((function(t){return e._checkResponse(t)})).catch((function(e){throw console.log(e),e}))}},{key:"updateAvatar",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this.headers.authorization,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then((function(e){return t._checkResponse(e)})).catch((function(e){throw console.log(e),e}))}},{key:"addCard",value:function(e,t){var n=this;return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:e,link:t})}).then((function(e){return n._checkResponse(e)})).catch((function(e){throw console.log(e),e}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this.headers.authorization}}).then((function(e){if(e.ok)return e.json();throw new Error("Error: ".concat(e.status))})).catch((function(e){throw console.error("Error en deleteCard:",e),e}))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers}).then((function(t){return e._checkResponse(t)})).catch((function(e){console.log(e)}))}},{key:"addLike",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this.headers}).then((function(e){return t._checkResponse(e)})).catch((function(e){throw console.log(e),e}))}},{key:"removeLike",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return t._checkResponse(e)})).catch((function(e){throw console.log(e),e}))}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())({baseUrl:"https://around.nomoreparties.co/v1/web_es_08",headers:{authorization:"cebd400e-cb13-478f-a576-1969697c9570","Content-Type":"application/json"}});function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==_(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==_(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===_(o)?o:String(o)),r)}var o}var g=function(){function e(t){var n=t.nameSelector,r=t.aboutSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(n),this._aboutElement=document.querySelector(r),this._userAvatar=document.querySelector(".user-photo"),this.userId}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this.getUserInfoApi(),{name:this._nameElement.textContent,about:this._aboutElement.textContent}}},{key:"getUserInfoApi",value:function(){var e=this;return v.getUserInfo().then((function(t){return e._nameElement.textContent=t.name,e._aboutElement.textContent=t.about,e._userAvatar.src=t.avatar,e.userId=t._id,k.name=t.name,k.about=t.about,k.avatar=t.avatar,k._id=t._id,t})).catch((function(e){throw console.log(e),e}))}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._nameElement.textContent=t,this._aboutElement.textContent=n}}])&&S(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),k={name:"",about:"",avatar:"",_id:""};function E(e,t){return e._id===t._id}var w=e.p+"abe4ddd19a9f23445254.jpg";function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==I(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==I(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===I(o)?o:String(o)),r)}var o}e.p,e.p,e.p;var L=[{image:w,text:"Zion Parque Nacional"}],j=(document.querySelector(".images"),document.querySelector(".image-popup"),document.querySelector(".image-popup__image"),document.querySelector(".image-popup__close"),document.querySelector(".image-popup__name"),new m(".image-popup")),C=new p(".eliminatePopup"),q=function(){function e(t,n,r){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:t;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._cardName=t,this._image=n,this._altText=o,this._deletePopup=document.querySelector(".eliminatePopup"),this._deleteButton=this._deletePopup.querySelector(".beforeEliminate-button"),this._cardInfo=r}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){var e=document.getElementById("post-template").content.querySelector(".post").cloneNode(!0),t=e.querySelector(".post__text"),n=e.querySelector(".post__image");return t.textContent=this._cardName,n.src=this._image,n.alt=this._altText,e}},{key:"_handleCardClick",value:function(){j.open(this._image,this._cardName)}},{key:"_handleLike",value:function(){var e=this._element.querySelector(".post__like"),t=this._element.querySelector(".post__like-hover"),n=this._element.querySelector(".post__like-count"),r=(parseInt(n.textContent),e.classList.contains("post__liked")),o=this._cardInfo.id;r?v.removeLike(o).then((function(r){n.textContent=r.likes.length.toString(),e.classList.remove("post__liked"),t.classList.remove("post__liked")})).catch((function(e){console.error('Error al quitar "me gusta" de la tarjeta:',e)})):v.addLike(o).then((function(r){n.textContent=r.likes.length.toString(),e.classList.add("post__liked"),t.classList.add("post__liked")})).catch((function(e){console.error('Error al dar "me gusta" a la tarjeta:',e)}))}},{key:"_handleDelete",value:function(){var e=this,t=this._deleteButton;C.open(),t.addEventListener("click",(function n(){t.disabled=!0,t.textContent="Eliminando...";var r=e._cardInfo,o=r.id;E(k,r.owner),t.removeEventListener("click",n),v.deleteCard(o).then((function(t){if(!t.message||"This post has been deleted"!==t.message)throw new Error("Error al eliminar la tarjeta: Respuesta inesperada del servidor");console.log("Tarjeta eliminada:",t),e._element&&e._element.remove()})).catch((function(e){console.error("Error al eliminar la tarjeta:",e)})).finally((function(){C.close(),t.textContent="Sí",t.disabled=!1}))}))}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".post__image").addEventListener("click",(function(){e._handleCardClick()})),this._element.querySelector(".post__like").addEventListener("click",(function(){e._handleLike()})),this._element.querySelector(".post__delete").addEventListener("click",(function(){e._handleDelete()}))}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._element}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==O(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==O(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===O(o)?o:String(o)),r)}var o}var T=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputContainer=document.querySelector(t),this._input=this._inputContainer.querySelector(n),this.enableValidation()}var t,n;return t=e,(n=[{key:"showInputError",value:function(e){var t=this._inputContainer.querySelector(".error-message");this._input===document.getElementById("link")&&(e="Ingrese una URL valida"),t.textContent=e,this._input.setCustomValidity(""),this._input.classList.add("error")}},{key:"hideInputError",value:function(){this._inputContainer.querySelector(".error-message").textContent="",this._input.classList.remove("error")}},{key:"checkInputValidity",value:function(){this._input.validity.valid?this.hideInputError():this.showInputError(this._input.validationMessage)}},{key:"enableValidation",value:function(){var e=this;this._input.addEventListener("input",(function(){e.checkInputValidity()}))}}])&&B(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),x=new T(".block-edit__nombre","#nombre"),A=new T(".block-edit__about","#about"),R=new T(".block-add__titulo","#titulo"),U=new T(".block-add__link","#link"),V=new T(".profile-input","#profileInput");function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function N(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&z(e,t)}function z(e,t){return z=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},z(e,t)}function F(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=G(e);if(t){var o=G(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return function(e,t){if(t&&("object"===D(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,n)}}function G(e){return G=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},G(e)}function K(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==D(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==D(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===D(o)?o:String(o)),r)}var o}function J(e,t,n){return t&&K(e.prototype,t),n&&K(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function H(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var M=document.querySelector(".user__top-normal"),Z=document.querySelector(".user-add"),Q=(document.querySelector(".user__top-name"),document.querySelector(".user__bottom"),document.querySelector(".formulario-edit")),W=(document.querySelector(".block-edit__text"),document.querySelector("#nombre"),document.querySelector("#about"),document.querySelector("#guardar-buttonEdit"),document.querySelector(".block-edit"),document.querySelector(".formulario-add")),X=(document.querySelector(".block-add__text"),document.querySelector("#titulo")),Y=document.querySelector("#link"),$=(document.querySelector("#guardar-buttonAdd"),document.querySelector(".block-add"),J((function e(t){H(this,e),this._formElement=t}))),ee=new p(".profilePopup"),te=function(e){N(n,e);var t=F(n);function n(e){var r;return H(this,n),(r=t.call(this,e))._urlInput=e.querySelector("#profileInput"),r._submitButton=e.querySelector(".profilePopup-block__button"),r._userPhoto=document.querySelector(".user-photo"),r._setEventListeners(),r}return J(n,[{key:"submitChangedPhoto",value:function(){var e=this,t=this._urlInput.value;this._submitButton.textContent="Guardando...",this._submitButton.disabled=!0,v.updateAvatar(t).then((function(n){e.updatePhoto(t)})).catch((function(e){console.error("Error al actualizar la foto de perfil:",e)})).finally((function(){e._submitButton.textContent="Guardar",e._submitButton.disabled=!1,ee.close()}))}},{key:"updatePhoto",value:function(e){this._userPhoto.src=e}},{key:"setInitialValue",value:function(){this._urlInput.value=""}},{key:"_setEventListeners",value:function(){var e=this;this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e.submitChangedPhoto()})),this._formElement.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),e._handleEnterKeyPress(),V.checkInputValidity())})),this._urlInput.addEventListener("input",(function(){e._urlInput.validity.valid?(e.enableSubmit(),V.hideInputError()):e.disableSubmit()}))}},{key:"_handleEnterKeyPress",value:function(){this._urlInput.validity.valid&&this.submitChangedPhoto()}},{key:"enableSubmit",value:function(){document.getElementById("submitAvatar").classList.add("profilePopup-block__button"),document.getElementById("submitAvatar").classList.remove("profilePopup-block__buttonDisabled")}},{key:"disableSubmit",value:function(){document.getElementById("submitAvatar").classList.add("profilePopup-block__buttonDisabled"),document.getElementById("submitAvatar").classList.remove("profilePopup-block__button")}}]),n}($),ne=new y(".formulario-edit",(function(e){console.log("Valores del Usuario:",e)})),re=new g({nameSelector:".user__top-name",aboutSelector:".user__bottom"}),oe=function(e){N(n,e);var t=F(n);function n(e){var r;return H(this,n),(r=t.call(this,e))._nombreInput=e.querySelector("#nombre"),r._aboutInput=e.querySelector("#about"),r._submitButton=e.querySelector("#guardar-buttonEdit"),r.setInitialValues(),r._setEventListeners(),r}return J(n,[{key:"setInitialValues",value:function(){var e=re.getUserInfo(),t=e.name,n=e.about;this._nombreInput.value=t,this._aboutInput.value=n}},{key:"_setEventListeners",value:function(){var e=this;this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmitForm()})),this._formElement.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),e._handleEnterKeyPress())})),this._nombreInput.addEventListener("input",(function(){e._handleInputValidation()})),this._aboutInput.addEventListener("input",(function(){e._handleInputValidation()}))}},{key:"_handleInputValidation",value:function(){this._nombreInput.validity.valid&&this._aboutInput.validity.valid?this._enableSubmit():this._disableSubmit()}},{key:"_handleEnterKeyPress",value:function(){this._nombreInput.validity.valid&&this._aboutInput.validity.valid&&this._handleSubmitForm()}},{key:"_disableSubmit",value:function(){this._submitButton.classList.remove("guardar-edit"),this._submitButton.classList.add("guardar-disabledEdit")}},{key:"_enableSubmit",value:function(){this._submitButton.textContent="Guardar",this._submitButton.disabled=!1,this._submitButton.classList.add("guardar-edit"),this._submitButton.classList.remove("guardar-disabledEdit")}},{key:"_handleSubmitForm",value:function(){var e=this,t=this._nombreInput.value,n=this._aboutInput.value;this._submitButton.textContent="Guardando...",this._submitButton.disabled=!0,fetch("https://around.nomoreparties.co/v1/web_es_08/users/me",{method:"PATCH",headers:{authorization:"cebd400e-cb13-478f-a576-1969697c9570","Content-Type":"application/json"},body:JSON.stringify({name:t,about:n})}).then((function(e){return e.json()})).then((function(e){re.setUserInfo({name:e.name,about:e.about}),ne.close()})).catch((function(e){console.error("Error al actualizar el perfil:",e)})).finally((function(){e._enableSubmit()}))}}]),n}($),ie=new y(".formulario-add",(function(e){})),ue=function(e){N(n,e);var t=F(n);function n(e){var r;return H(this,n),(r=t.call(this,e))._titleInput=e.querySelector("#titulo"),r._linkInput=e.querySelector("#link"),r._submitButton=e.querySelector("#guardar-buttonAdd"),r._setEventListenersAdd(),r}return J(n,[{key:"_setEventListenersAdd",value:function(){var e=this;this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmitForm()})),this._formElement.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),e._handleEnterKeyPress())})),X.addEventListener("input",(function(){X.validity.valid&&Y.validity.valid?e._enableSubmit():e._disableSubmit()})),Y.addEventListener("input",(function(){X.validity.valid&&Y.validity.valid?e._enableSubmit():e._disableSubmit()}))}},{key:"_handleEnterKeyPress",value:function(){X.validity.valid&&Y.validity.valid&&this._handleSubmitForm()}},{key:"_disableSubmit",value:function(){document.getElementById("guardar-buttonAdd").classList.remove("guardar-add"),document.getElementById("guardar-buttonAdd").classList.add("guardar-disabledAdd")}},{key:"_enableSubmit",value:function(){document.getElementById("guardar-buttonAdd").classList.add("guardar-add"),document.getElementById("guardar-buttonAdd").classList.remove("guardar-disabledAdd"),document.getElementById("guardar-buttonAdd").disabled=!1,document.getElementById("guardar-buttonAdd").textContent="Guardar"}},{key:"_emptyInputs",value:function(){this._titleInput.value="",this._linkInput.value=""}},{key:"_handleSubmitForm",value:function(){var e,t,n=this;document.getElementById("guardar-buttonAdd").disabled=!0,document.getElementById("guardar-buttonAdd").textContent="Guardando...",e=this._titleInput.value,t=this._linkInput.value,v.addCard(e,t).then((function(e){var t={name:e.name,link:e.link,owner:e.owner,id:e._id,likes:e.likes},n=new q(e.name,e.link,t);n.generateCard(),le.addNewItem(n._element),E(k,t.owner)})).catch((function(e){console.error("Error al añadir la nueva tarjeta:",e)})),setTimeout((function(){n._enableSubmit(),ie.close()}),400)}}]),n}($),ae=new te(document.querySelector(".profilePopup"));document.querySelector(".user-photoBack").addEventListener("click",(function(){ee.open(),ae.setInitialValue(),V.hideInputError(),ae.disableSubmit()}));var le=new r({items:L,renderer:function(e){var t=new q(e.text,e.image);t.generateCard(),le.addItem(t._element)}},".images");le.render();var ce=new oe(Q);M.addEventListener("click",(function(){ne.open(),ce.setInitialValues(),ce._enableSubmit(),x.checkInputValidity(),A.checkInputValidity(),x.hideInputError(),A.hideInputError()}));var se=new ue(W);function de(e){}Z.addEventListener("click",(function(){ie.open(),se._emptyInputs(),se._disableSubmit(),R.hideInputError(),U.hideInputError()})),le.clear(),v.getUserInfo().then((function(e){return k.name=e.name,k.about=e.about,k.avatar=e.avatar,k._id=e._id,v.getInitialCards()})).then((function(e){e.forEach((function(e){var t={name:e.name,link:e.link,owner:e.owner,id:e._id,likes:e.likes},n=new q(e.name,e.link,t);n.generateCard(),le.addItem(n._element);var r=n._element.querySelector(".post__delete"),o=n._element.querySelector(".post__delete-hover"),i=E(k,t.owner);r.style.display=i?"block":"none",o.style.display=i?"block":"none",n._element.querySelector(".post__like-count").textContent=t.likes.length.toString();var u=n._element.querySelector(".post__like");t.likes.some((function(e){return e._id===k._id}))&&u.classList.add("post__liked")}))})).catch((function(e){console.error("Error al obtener las tarjetas:",e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,